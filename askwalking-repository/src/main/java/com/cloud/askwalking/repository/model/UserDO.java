package com.cloud.askwalking.repository.model;

import java.io.Serializable;
import java.util.Date;

/**
 * @author niuzhiwei
 */
public class UserDO implements Serializable {
    /**
     * 
     * 表字段 : gw_user.id
     */
    private Integer id;

    /**
     * 
     * 表字段 : gw_user.nick_name
     */
    private String nickName;

    /**
     * 
     * 表字段 : gw_user.user_name
     */
    private String userName;

    /**
     * 
     * 表字段 : gw_user.password
     */
    private String password;

    /**
     * 用户状态：0:禁用 1：启用
     * 表字段 : gw_user.status
     */
    private Integer status;

    /**
     * 0-未删除,1-已删除
     * 表字段 : gw_user.delete_flag
     */
    private Boolean deleteFlag;

    /**
     * 操作人
     * 表字段 : gw_user.operator
     */
    private String operator;

    /**
     * 更新时间
     * 表字段 : gw_user.update_time
     */
    private Date updateTime;

    /**
     * 创建时间
     * 表字段 : gw_user.create_time
     */
    private Date createTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table gw_user
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取  字段:gw_user.id
     *
     * @return gw_user.id, 
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置  字段:gw_user.id
     *
     * @param id the value for gw_user.id, 
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取  字段:gw_user.nick_name
     *
     * @return gw_user.nick_name, 
     */
    public String getNickName() {
        return nickName;
    }

    /**
     * 设置  字段:gw_user.nick_name
     *
     * @param nickName the value for gw_user.nick_name, 
     */
    public void setNickName(String nickName) {
        this.nickName = nickName == null ? null : nickName.trim();
    }

    /**
     * 获取  字段:gw_user.user_name
     *
     * @return gw_user.user_name, 
     */
    public String getUserName() {
        return userName;
    }

    /**
     * 设置  字段:gw_user.user_name
     *
     * @param userName the value for gw_user.user_name, 
     */
    public void setUserName(String userName) {
        this.userName = userName == null ? null : userName.trim();
    }

    /**
     * 获取  字段:gw_user.password
     *
     * @return gw_user.password, 
     */
    public String getPassword() {
        return password;
    }

    /**
     * 设置  字段:gw_user.password
     *
     * @param password the value for gw_user.password, 
     */
    public void setPassword(String password) {
        this.password = password == null ? null : password.trim();
    }

    /**
     * 获取 用户状态：0:禁用 1：启用 字段:gw_user.status
     *
     * @return gw_user.status, 用户状态：0:禁用 1：启用
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 设置 用户状态：0:禁用 1：启用 字段:gw_user.status
     *
     * @param status the value for gw_user.status, 用户状态：0:禁用 1：启用
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * 获取 0-未删除,1-已删除 字段:gw_user.delete_flag
     *
     * @return gw_user.delete_flag, 0-未删除,1-已删除
     */
    public Boolean getDeleteFlag() {
        return deleteFlag;
    }

    /**
     * 设置 0-未删除,1-已删除 字段:gw_user.delete_flag
     *
     * @param deleteFlag the value for gw_user.delete_flag, 0-未删除,1-已删除
     */
    public void setDeleteFlag(Boolean deleteFlag) {
        this.deleteFlag = deleteFlag;
    }

    /**
     * 获取 操作人 字段:gw_user.operator
     *
     * @return gw_user.operator, 操作人
     */
    public String getOperator() {
        return operator;
    }

    /**
     * 设置 操作人 字段:gw_user.operator
     *
     * @param operator the value for gw_user.operator, 操作人
     */
    public void setOperator(String operator) {
        this.operator = operator == null ? null : operator.trim();
    }

    /**
     * 获取 更新时间 字段:gw_user.update_time
     *
     * @return gw_user.update_time, 更新时间
     */
    public Date getUpdateTime() {
        return updateTime;
    }

    /**
     * 设置 更新时间 字段:gw_user.update_time
     *
     * @param updateTime the value for gw_user.update_time, 更新时间
     */
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * 获取 创建时间 字段:gw_user.create_time
     *
     * @return gw_user.create_time, 创建时间
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 设置 创建时间 字段:gw_user.create_time
     *
     * @param createTime the value for gw_user.create_time, 创建时间
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }
}